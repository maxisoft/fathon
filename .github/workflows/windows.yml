name: Windows CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      generate-attestation:
        description: 'Generate SLSA build provenance attestation'
        required: true
        type: boolean
        default: false

jobs:
  build:
    permissions:
      id-token: write # Required for OIDC token
      contents: read   # Required to read source code
      attestations: write # Required to write attestations

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        # Test against specific supported versions and always on the latest stable Python 3 version.
        python-version: ['3.11', '3.12', '3.13', '3.x']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup and run vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        # This tells the action to find vcpkg.json and run 'vcpkg install'
        runVcpkgInstall: true
        vcpkgGitCommitId: '5b1214315250939257ef5d62ecdcbca18cf4fb1c' # Pin vcpkg version for reproducibility

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install cython wheel pytest

    - name: Build fathon wheel
      shell: pwsh
      run: |
        # Set GSL_DIR to the path where run-vcpkg installed the libraries.
        $env:GSL_DIR = $env:VCPKG_INSTALLED_DIR
        # Build the wheel and place it in the 'dist' directory
        python -m pip wheel . -w dist --verbose

    - name: Generate artifact attestation
      # This step only runs when the workflow is manually dispatched with the 'generate-attestation' input set to true.
      if: github.event_name == 'workflow_dispatch' && inputs.generate-attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: "dist/*.whl"

    - name: Install fathon from wheel
      run: python -m pip install dist/*.whl

    - name: Run tests
      run: pytest tests/

    - name: Upload Wheel Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: fathon-wheel-${{ matrix.python-version }}
        path: dist/

    - name: Upload GSL Library Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: gsl-libs-${{ matrix.python-version }}
        path: ${{ env.GSL_DIR }}
