name: Windows CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      generate-attestation:
        description: 'Generate SLSA build provenance attestation'
        required: true
        type: boolean
        default: false

jobs:
  build:
    permissions:
      id-token: write # Required for OIDC token
      contents: read   # Required to read source code
      attestations: write # Required to write attestations

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12', '3.13', '3.x']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Attempt to install GSL with pinned vcpkg
      id: vcpkg_pinned
      uses: lukka/run-vcpkg@v11
      with:
        runVcpkgInstall: true
        vcpkgGitCommitId: '120deac3062162151622ca4860575a33844ba10b'
      continue-on-error: true

    - name: Attempt to install GSL with latest vcpkg (on failure)
      id: vcpkg_latest
      if: steps.vcpkg_pinned.outcome == 'failure'
      uses: lukka/run-vcpkg@v11
      with:
        runVcpkgInstall: true # No commit ID, so it uses the latest vcpkg

    - name: Set GSL_DIR Environment Variable
      shell: pwsh
      run: |
        if ($env:VCPKG_ROOT -eq $null) {
          echo "::error::vcpkg installation failed, VCPKG_ROOT is not set."
          exit 1
        }
        $gsl_dir = "$($env:VCPKG_ROOT)/installed/$($env:VCPKG_DEFAULT_TRIPLET)"
        echo "GSL_DIR=$gsl_dir" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "GSL_DIR permanently set for this job: $gsl_dir"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install cython wheel pytest

    - name: Build fathon wheel
      # Use --no-build-isolation to make the GSL_DIR env var available to setup.py
      run: python -m pip wheel . -w dist --verbose --no-build-isolation

    - name: Generate artifact attestation
      if: github.event_name == 'workflow_dispatch' && inputs.generate-attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: "dist/*.whl"

    - name: Install fathon from wheel
      run: python -m pip install dist/*.whl

    - name: Run tests
      run: pytest tests/

    - name: Upload Wheel Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: fathon-wheel-${{ matrix.python-version }}
        path: dist/

    - name: Upload GSL Library Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: gsl-libs-${{ matrix.python-version }}
        path: ${{ env.GSL_DIR }}
